/*! For license information please see main.caff990652560825ec72.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatestarter("main",{"./app/index.js":(e,t,a)=>{a.r(t);var s=a("./app/pages/About/index.js"),i=a("./app/pages/Collections/index.js"),n=a("./app/pages/Detail/index.js"),o=a("./app/pages/Home/index.js"),h=a("./node_modules/lodash/each.js"),p=a.n(h),d=a("./app/components/Preloader.js"),r=a("./app/components/Navigation.js");new class{constructor(){this.createContent(),this.createPreloader(),this.createNavigation(),this.createPages(),this.addEventListeners(),this.addLinkListeners(),this.update()}createNavigation(){this.navigation=new r.default({template:this.template})}createPreloader(){this.preloader=new d.default,this.preloader.once("completed",this.onPreloaded.bind(this))}createContent(){this.content=document.querySelector(".content"),this.template=this.content.getAttribute("data-template")}createPages(){this.pages={about:new s.default,home:new o.default,collections:new i.default,detail:new n.default},this.page=this.pages[this.template],this.page.create()}onPreloaded(){this.preloader.destroy(),this.onResize(),this.page.show()}onPopState(){this.onChange({url:window.location.pathname,push:!1})}update(){this.page&&this.page.update&&this.page.update(),this.frame=window.requestAnimationFrame(this.update.bind(this))}onResize(){this.page&&this.page.onResize&&this.page.onResize()}async onChange(e,t=!0){await this.page.hide();const a=await window.fetch(e);if(200===a.status){const s=await a.text(),i=document.createElement("div");i.innerHTML=s,t&&window.history.pushState({},"",e);const n=i.querySelector(".content");this.content.innerHTML=n.innerHTML,this.template=n.getAttribute("data-template"),this.content.setAttribute("data-template",this.template),this.navigation.onChange(this.template),this.page=this.pages[this.template],this.page.create(),this.onResize(),this.page.show(),this.addLinkListeners()}else console.log("error")}addEventListeners(){window.addEventListener("popstate",this.onPopState.bind(this)),window.addEventListener("resize",this.onResize.bind(this))}addLinkListeners(){const e=document.querySelectorAll("a");p()(e,(e=>{e.onclick=t=>{t.preventDefault();const{href:a}=e;this.onChange({url:a})}}))}}}},(function(e){e.h=()=>"2277f23c1f1437fc2117"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,